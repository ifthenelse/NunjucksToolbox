name: Test Package Features

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test-features:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install PyYAML

      - name: Test snippet syntax
        run: |
          if [ -f "Nunjucks-toolbox.sublime-snippets" ]; then
            echo "✅ Snippets file found"
            python3 -c "import json; json.load(open('Nunjucks-toolbox.sublime-snippets')); print('✅ Snippets JSON is valid')"
          else
            echo "⚠️ No snippets file found"
          fi

      - name: Test build system
        run: |
          if [ -f "Nunjucks.sublime-build" ]; then
            echo "✅ Build system found"
            python3 -c "
            import json, sys
            build = json.load(open('Nunjucks.sublime-build'))
            required = ['shell_cmd', 'selector']
            missing = [k for k in required if k not in build]
            if missing:
                print('❌ Missing keys:', missing)
                sys.exit(1)
            print('✅ Build system valid')
            "
          else
            echo "⚠️ No build system file found"
          fi

      - name: Test preference files
        run: |
          found_prefs=false
          for file in *.tmPreferences; do
            if [ -f "$file" ]; then
              found_prefs=true
              echo "✅ Found preference file: $file"
              python3 -c "
              import xml.etree.ElementTree as ET, sys
              try:
                  ET.parse('$file')
                  print('✅ $file is valid XML')
              except ET.ParseError as e:
                  print('❌ XML error in $file:', e)
                  sys.exit(1)
              "
            fi
          done
          if [ "$found_prefs" = false ]; then
            echo "⚠️ No preference files found"
          fi

      - name: Test syntax file structure
        run: |
          python3 -c "
          import yaml, sys
          try:
              with open('Nunjucks-toolbox.sublime-syntax') as f:
                  syntax = yaml.safe_load(f)
              required = ['name', 'file_extensions', 'scope', 'contexts']
              missing = [k for k in required if k not in syntax]
              if missing:
                  print('❌ Missing syntax keys:', missing)
                  sys.exit(1)
              contexts = syntax.get('contexts', {})
              if 'main' not in contexts:
                  print('❌ Missing main context')
                  sys.exit(1)
              print('✅ Syntax file structure valid')
              print('  - Name:', syntax.get('name'))
              print('  - Extensions:', syntax.get('file_extensions'))
              print('  - Contexts:', len(contexts))
          except Exception as e:
              print('❌ Error validating syntax file:', e)
              sys.exit(1)
          "

      - name: Test file completeness
        run: |
          echo "📋 Package completeness check:"

          # Check required files
          missing_required=0

          if [ -f "Nunjucks-toolbox.sublime-syntax" ]; then
            echo "✅ Required: Nunjucks-toolbox.sublime-syntax"
          else
            echo "❌ Missing required: Nunjucks-toolbox.sublime-syntax"
            missing_required=$((missing_required + 1))
          fi

          if [ -f "README.md" ]; then
            echo "✅ Required: README.md"
          else
            echo "❌ Missing required: README.md"
            missing_required=$((missing_required + 1))
          fi

          # Check optional files
          optional_count=0

          if [ -f "Nunjucks-toolbox.sublime-snippets" ]; then
            echo "✅ Optional: Nunjucks-toolbox.sublime-snippets"
            optional_count=$((optional_count + 1))
          else
            echo "⚠️ Missing optional: Nunjucks-toolbox.sublime-snippets"
          fi

          if [ -f "Nunjucks.sublime-build" ]; then
            echo "✅ Optional: Nunjucks.sublime-build"
            optional_count=$((optional_count + 1))
          else
            echo "⚠️ Missing optional: Nunjucks.sublime-build"
          fi

          if ls *.tmPreferences >/dev/null 2>&1; then
            pref_count=$(ls -1 *.tmPreferences 2>/dev/null | wc -l)
            echo "✅ Optional: $pref_count preference files"
            optional_count=$((optional_count + 1))
          else
            echo "⚠️ Missing optional: .tmPreferences files"
          fi

          if [ $missing_required -gt 0 ]; then
            echo "❌ Missing $missing_required required files"
            exit 1
          fi

          echo "📊 Summary:"
          echo "  - Required files: 2/2 ✅"
          echo "  - Optional features: $optional_count found"

      - name: Generate feature report
        run: |
          echo "# Package Feature Report" > feature-report.md
          echo "" >> feature-report.md
          echo "## Available Features" >> feature-report.md

          if [ -f "Nunjucks-toolbox.sublime-syntax" ]; then
            echo "- ✅ Syntax Highlighting" >> feature-report.md
          fi

          if [ -f "Nunjucks-toolbox.sublime-snippets" ]; then
            echo "- ✅ Auto-completion Snippets" >> feature-report.md
          fi

          if [ -f "Nunjucks.sublime-build" ]; then
            echo "- ✅ Build System" >> feature-report.md
          fi

          if ls *.tmPreferences >/dev/null 2>&1; then
            echo "- ✅ Editor Preferences" >> feature-report.md
          fi

          echo "" >> feature-report.md
          echo "## Test Results" >> feature-report.md
          echo "- ✅ All tests passed" >> feature-report.md
          echo "- ✅ File structure validated" >> feature-report.md
          echo "- ✅ Syntax validated" >> feature-report.md

          cat feature-report.md

      - name: Upload feature report
        uses: actions/upload-artifact@v4
        with:
          name: feature-report
          path: feature-report.md
