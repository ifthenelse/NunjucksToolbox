name: Update Documentation

on:
  push:
    branches: [main, master]
    paths:
      - "Syntaxes/NunjucksToolbox.sublime-syntax"
      - "README.md"

jobs:
  update-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract supported features
        run: |
          python3 -c "
          import yaml
          import re

          with open('Syntaxes/NunjucksToolbox.sublime-syntax', 'r') as f:
              syntax = yaml.safe_load(f)
              
          # Extract file extensions
          extensions = syntax.get('file_extensions', [])
          print('Supported file extensions:')
          for ext in extensions:
              print(f'  - .{ext}')
              
          # Extract variables to show supported features
          variables = syntax.get('variables', {})

          if 'nunjucks_tags' in variables:
              tags = variables['nunjucks_tags']
              # Extract tag names from regex
              tag_matches = re.findall(r'(\w+)', tags)
              unique_tags = sorted(set(tag_matches))
              print(f'\\nSupported tags ({len(unique_tags)}):')
              for tag in unique_tags[:10]:  # Show first 10
                  print(f'  - {tag}')
              if len(unique_tags) > 10:
                  print(f'  - ... and {len(unique_tags) - 10} more')
                  
          if 'nunjucks_filters' in variables:
              filters = variables['nunjucks_filters']
              filter_matches = re.findall(r'(\w+)', filters)
              unique_filters = sorted(set(filter_matches))
              print(f'\\nSupported filters ({len(unique_filters)}):')
              for filter_name in unique_filters[:10]:  # Show first 10
                  print(f'  - {filter_name}')
              if len(unique_filters) > 10:
                  print(f'  - ... and {len(unique_filters) - 10} more')
          " > features.txt

      - name: Update README
        run: |
          cat > README.md << 'EOF'
          # Nunjucks Toolbox for Sublime Text

          An advanced [Nunjucks](https://mozilla.github.io/nunjucks/) templating syntax package for Sublime Text 3 & 4.

          > **Note**: This is "Nunjucks Toolbox" - a comprehensive package with enhanced features. There's also a separate "Nunjucks" package available.

          ## Features

          - üé® **Complete Syntax Highlighting** - Advanced Nunjucks template syntax support
          - üìù **Smart Completions** - Auto-completion for tags, filters, and structures
          - üè∑Ô∏è **Multiple File Extensions** - `.nunjucks`, `.nunjs`, `.njk`, `.html`
          - üîß **Build System** - Template validation and linting
          - ‚ö° **Auto-Pairing** - Intelligent bracket matching
          - üí¨ **Comment Support** - Line and block comments
          - üéØ **Symbol Navigation** - Jump to blocks, macros, and variables
          - üõ†Ô∏è **Enhanced Toolbox** - Additional developer productivity features

          ## Installation

          ### Package Control (Recommended)

          1. Install [Package Control](https://packagecontrol.io/installation)
          2. Open Command Palette (`Ctrl+Shift+P`/`Cmd+Shift+P`)
          3. Run "Package Control: Install Package"
          4. Search for "Nunjucks Toolbox" and install

          ### Manual Installation

          1. Download the latest release
          2. Extract to your Sublime Text `Packages/Nunjucks Toolbox` directory
          3. Restart Sublime Text

          ## Usage

          The syntax automatically activates for:

          - `.nunjucks` files
          - `.nunjs` files
          - `.njk` files
          - `.html` files with Nunjucks syntax

          ### Snippets

          Type these triggers and press `Tab`:

          | Trigger   | Description          | Output                                      |
          | --------- | -------------------- | ------------------------------------------- |
          | `for`     | For loop             | `{% for item in items %}...{% endfor %}`    |
          | `if`      | If statement         | `{% if condition %}...{% endif %}`          |
          | `block`   | Template block       | `{% block name %}...{% endblock %}`         |
          | `macro`   | Macro definition     | `{% macro name(params) %}...{% endmacro %}` |
          | `extends` | Template inheritance | `{% extends "base.html" %}`                 |

          ### Build System

          Press `Ctrl+B`/`Cmd+B` to validate template syntax using Node.js.

          ## Project Structure

          ```
          Syntaxes/           # Syntax definitions
          Completions/        # Auto-completion files
          Snippets/           # Code snippets
          Settings/           # Package settings
          Preferences/        # Editor preferences
          BuildSystems/       # Build system definitions
          ```

          ## Contributing

          1. Fork the repository
          2. Create a feature branch
          3. Make your changes
          4. Add tests
          5. Submit a pull request

          ## License

          MIT License - see [LICENSE](LICENSE) file for details.
          EOF

      - name: Commit documentation updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add README.md
            git commit -m "docs: Update README with latest features [skip ci]"
            git push
          fi
