name: Validate and Test Syntax

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]

jobs:
  validate-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install PyYAML

      - name: Validate YAML syntax and structure
        run: |
          echo "🔍 Validating syntax files..."

          if [ ! -f "Syntaxes/NunjucksToolbox.sublime-syntax" ]; then
            echo "❌ Required syntax file missing"
            exit 1
          fi

          python3 -c "
          import yaml, sys
          try:
              with open('Syntaxes/NunjucksToolbox.sublime-syntax') as f:
                  syntax = yaml.safe_load(f)
              
              # Validate structure
              required = ['name', 'file_extensions', 'scope', 'contexts']
              missing = [k for k in required if k not in syntax]
              if missing:
                  print('❌ Missing syntax keys:', missing)
                  sys.exit(1)
                  
              contexts = syntax.get('contexts', {})
              if 'main' not in contexts:
                  print('❌ Missing main context')
                  sys.exit(1)
                  
              print('✅ YAML syntax and structure valid')
              print('  - Name:', syntax.get('name'))
              print('  - Extensions:', syntax.get('file_extensions'))
              print('  - Contexts:', len(contexts))
              
          except Exception as e:
              print(f'❌ Error validating syntax file: {e}')
              sys.exit(1)
          "

      - name: Create and test with real templates
        run: |
          mkdir -p test-templates

          # Create test template
          cat > test-templates/test.njk << 'EOF'
          {# This is a comment #}
          <!DOCTYPE html>
          <html>
          <head>
              <title>{{ title | default("Default Title") }}</title>
          </head>
          <body>
              {% if user %}
                  <h1>Hello, {{ user.name }}!</h1>
              {% else %}
                  <h1>Hello, Guest!</h1>
              {% endif %}
              
              {% for item in items %}
                  <div class="item">{{ item }}</div>
              {% endfor %}
              
              {% macro renderButton(text, type="button") %}
                  <button type="{{ type }}">{{ text }}</button>
              {% endmacro %}
              
              {{ renderButton("Click me") }}
          </body>
          </html>
          EOF

      - name: Test pattern recognition
        run: |
          python3 -c "
          import re

          with open('test-templates/test.njk', 'r') as f:
              content = f.read()

          patterns = {
              'comments': r'\{#.*?#\}',
              'variables': r'\{\{.*?\}\}',
              'tags': r'\{%.*?%\}',
              'filters': r'\|[\s]*\w+',
          }

          print('🔍 Testing Nunjucks pattern recognition:')
          all_good = True
          for pattern_name, pattern in patterns.items():
              matches = re.findall(pattern, content, re.DOTALL)
              print(f'  {pattern_name}: {len(matches)} matches')
              if matches:
                  example = matches[0].replace('\n', ' ').strip()
                  print(f'    Example: {example[:50]}...')
              else:
                  print(f'    ⚠️  No {pattern_name} found')

          print('✅ Pattern recognition test completed')
          "

      - name: Validate related JSON files
        run: |
          echo "🔍 Validating JSON files..."

          for file in "Completions/NunjucksToolbox.sublime-completions" "package.json" "messages.json"; do
            if [ -f "$file" ]; then
              python3 -c "import json; json.load(open('$file')); print('✅ $file is valid')"
            fi
          done

      - name: Check scope consistency
        run: |
          python3 -c "
          import yaml, json, os

          main_scope = 'text.html.nunjucks-toolbox'
          issues = []

          # Check syntax file
          with open('Syntaxes/NunjucksToolbox.sublime-syntax') as f:
              syntax = yaml.safe_load(f)
          if syntax.get('scope') != main_scope:
              issues.append(f'Syntax scope mismatch: {syntax.get(\"scope\")}')

          # Check other files
          for filename in ['Snippets/NunjucksToolbox.sublime-snippets', 'Completions/NunjucksToolbox.sublime-completions']:
              if os.path.exists(filename):
                  with open(filename) as f:
                      data = json.load(f)
                  if data.get('scope') and data.get('scope') != main_scope:
                      issues.append(f'{filename} scope mismatch: {data.get(\"scope\")}')

          if issues:
              print('❌ Scope issues:', issues)
              exit(1)
          else:
              print('✅ Scope consistency validated')
          "

      - name: Generate test report
        run: |
          echo "# Syntax Validation Report" > test-report.md
          echo "- ✅ YAML syntax validation" >> test-report.md
          echo "- ✅ Required structure validation" >> test-report.md  
          echo "- ✅ Pattern recognition testing" >> test-report.md
          echo "- ✅ JSON file validation" >> test-report.md
          echo "- ✅ Scope consistency check" >> test-report.md

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: syntax-validation-report
          path: |
            test-templates/
            test-report.md
